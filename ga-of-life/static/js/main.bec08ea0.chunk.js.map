{"version":3,"sources":["workers/EaWorker.js","shared/utils.js","components/CaControl.js","shared/Constants.js","components/EaControl.js","components/EaSettings.js","components/CaGraph.js","pages/Ca.js","components/GenotypePlot.js","components/PhenotypePlot.js","components/EaGraph.js","components/EaStatistics.js","pages/EaRunner.js","pages/EaSetup.js","pages/Ea.js","pages/Help.js","App.js","reportWebVitals.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","bound","value","min","max","Math","wasm","CaSettingsContext","React","createContext","CaControlContext","initialCaSettings","borderWraps","gridSize","initialCaControlState","undefined","caSettingsReducer","state","action","type","console","error","wasmInit","a","info","caControlReducer","ca","seed","numSteps","autoRun","caStats","stats","CaControl","useContext","caControl","caControlDispatch","caSettings","onceAliveRef","useRef","Array","canvasRef","ctx","current","getContext","onceAlive","gridWidth","gridHeight","cellSize","round","seedCa","useCallback","reset","x0","y0","x","y","charAt","set","drawGrid","beginPath","strokeStyle","i","moveTo","lineTo","j","stroke","drawCells","row","col","get","fillStyle","fillRect","updateCaStats","numAlive","numOnceAlive","filter","length","step","clearOnceAlive","forEach","_","useEffect","GameOfLife","init","timer","setTimeout","clearTimeout","Container","Row","className","Col","Button","onClick","disabled","ref","width","height","EaControlContext","eaControlReducer","settings","worker","isRunning","executeStep","runTime","executionTime","eaState","destroy","EaControl","eaControl","eaControlDispatch","eaWorker","startStep","Date","getTime","then","endStep","terminate","EaSettingsContext","initialEaSettings","populationSize","recombinationRate","mutationRate","tournamentSize","elitism","fitnessNumToggledCells","fitnessNumToggledSteps","fitnessMaxAliveCells","fitnessMaxAliveSteps","fitnessNumStartCells","eaSettingsReducer","log","EaSettings","caSettingsDispatch","eaSettings","eaSettingsDispatch","NumericFormField","id","label","actionType","optionalProps","indent","dispatch","stepSize","activeStepSize","abs","Form","Group","as","controlId","xs","Label","column","Control","onChange","e","target","CheckBoxFormField","Check","checked","maxAliveFitnessEnabled","numToggledFitnessEnabled","sm","md","variant","Highcharts","require","CaGraph","useState","numStepsPlotted","setNumStepsPlotted","maxNumAlive","setMaxNumAlive","chart","setChart","caState","initChart","title","text","yAxis","floor","opposite","series","marker","enabled","data","newMaxNumAlive","addPoint","style","Ca","history","useHistory","useReducer","push","Provider","intensity","boundedIntensity","Number","GenotypePlot","genotype","plotSettings","setPlotSettings","canvas","canvasWidth","horizontalCellSpace","verticalCellSpace","bigCellMaxWidth","bigCellMaxHeight","bigCellMaxSize","bigCellSize","h","index","plotCell","drawGenotype","clearRect","clearPlot","PhenotypePlot","phenotype","cellMaxWidth","cellMaxHeight","drawPhenotype","EaGraph","lastPlotGeneration","setLastPlotGeneration","numPlotPoints","setNumPlotPoints","generations","shift","maxFitness","evaluationsDelta","EaStatistics","runTimeInSeconds","evaluations","caSteps","avgFitness","EaRunner","lg","geneDistribution","bestGenotype","cellDistribution","bestPhenotype","EaSetup","xl","Ea","Help","href","App","Navbar","bg","Brand","Nav","defaultActiveKey","Link","basename","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bec08ea0.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"init\",\"reset\",\"step\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"6ef04a475d022aeeecdb.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export function bound(value, min, max) {\n    return Math.max(Math.min(max, value), min);\n}","import React, { useCallback, useContext, useEffect, useRef } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport { MAX_GRID_SIZE, SEED_SIZE } from '../shared/Constants';\nimport { bound } from '../shared/utils';\n\nconst GRID_COLOR = \"#CCCCCC\";\nconst EMPTY_COLOR = \"#FFFFFF\";\nconst ALIVE_COLOR = \"#000000\";\nconst LIVED_COLOR = \"#A0A0A0\";\n\nexport const CaSettingsContext = React.createContext();\nexport const CaControlContext = React.createContext();\n\nexport const initialCaSettings = {\n    borderWraps: false,\n    gridSize: 64,\n};\nexport const initialCaControlState = undefined;\n\nexport function caSettingsReducer(state, action) {\n    switch (action.type) {\n        case 'borderWraps': return {\n            ...state, borderWraps: action.value\n        };\n        case 'gridSize': return {\n            ...state, gridSize: bound(action.value, 32, MAX_GRID_SIZE)\n        };\n        default:\n            console.error('Unexpected action:', action.type);\n    }\n}\n\nlet wasm;\nasync function wasmInit() {\n    if (!wasm) {\n        console.info(\"Loading CA wasm\");\n\n        wasm = await import('ga-of-life');\n    }\n\n    return wasm;\n};\n\nexport function caControlReducer(state, action) {\n    switch (action.type) {\n        case 'initialize': return initialCaControlState;\n        case 'initialized': return {\n            ca: action.ca,\n            seed: action.seed,\n            numSteps: 0,\n            autoRun: false,\n        };\n        case 'toggleAutoRun': return {\n            ...state,\n            autoRun: !state.autoRun,\n        }\n        case 'executedStep': return {\n            ...state,\n            numSteps: state.numSteps + 1,\n            caStats: action.stats\n        };\n        default:\n            console.error('Unexpected action:', action.type);\n    }\n}\n\nexport function CaControl({ seed }) {\n    const { caControl, caControlDispatch } = useContext(CaControlContext);\n    const { caSettings } = useContext(CaSettingsContext);\n    const onceAliveRef = useRef(new Array(caSettings.gridSize * caSettings.gridSize));\n    const canvasRef = useRef(null);\n\n    const ctx = canvasRef.current?.getContext('2d');\n    const ca = caControl?.ca;\n    const onceAlive = onceAliveRef.current;\n    const gridWidth = caSettings.gridSize;\n    const gridHeight = caSettings.gridSize;\n    const cellSize = Math.max(4, Math.round(12 * 32 / Math.max(gridWidth, gridHeight)));\n\n    const seedCa = useCallback(\n        // Taking ca as arg, as it will be newly set\n        (ca) => {\n            ca.reset();\n\n            const x0 = (gridWidth - SEED_SIZE) / 2;\n            const y0 = (gridHeight - SEED_SIZE) / 2;\n            for (let x = 0; x < SEED_SIZE; x++) {\n                for (let y = 0; y < SEED_SIZE; y++) {\n                    if (seed.charAt(x + y * SEED_SIZE) !== '0') {\n                        ca.set(x + x0, y + y0);\n                    }\n                }\n            }\n        },\n        [seed, gridWidth, gridHeight]\n    )\n\n    const drawGrid = useCallback(\n        () => {\n            ctx.beginPath();\n            ctx.strokeStyle = GRID_COLOR;\n\n            // Vertical lines.\n            for (let i = 0; i <= gridWidth; i++) {\n                ctx.moveTo(i * (cellSize + 1) + 1, 0);\n                ctx.lineTo(i * (cellSize + 1) + 1, (cellSize + 1) * gridHeight + 1);\n            }\n\n            // Horizontal lines.\n            for (let j = 0; j <= gridHeight; j++) {\n                ctx.moveTo(0,                              j * (cellSize + 1) + 1);\n                ctx.lineTo((cellSize + 1) * gridWidth + 1, j * (cellSize + 1) + 1);\n            }\n\n            ctx.stroke();\n        },\n        [ctx, gridWidth, gridHeight, cellSize]\n    )\n\n    const drawCells = useCallback(\n        () => {\n            ctx.beginPath();\n            for (let row = 0; row < gridHeight; row++) {\n                for (let col = 0; col < gridWidth; col++) {\n\n                    if (ca.get(col, row)) {\n                        ctx.fillStyle = ALIVE_COLOR;\n                    } else if (onceAlive[col + row * gridWidth]) {\n                        ctx.fillStyle = LIVED_COLOR;\n                    } else {\n                        ctx.fillStyle = EMPTY_COLOR;\n                    }\n\n                    ctx.fillRect(\n                        col * (cellSize + 1) + 1,\n                        row * (cellSize + 1) + 1,\n                        cellSize,\n                        cellSize\n                    );\n                }\n            }\n\n            ctx.stroke();\n        },\n        [ctx, ca, gridWidth, gridHeight, cellSize, onceAlive]\n    );\n\n    const updateCaStats = useCallback(\n        () => {\n            let numAlive = 0;\n            for (let row = 0; row < gridHeight; row++) {\n                for (let col = 0; col < gridWidth; col++) {\n                    if (ca.get(col, row)) {\n                        onceAlive[col + row * gridWidth] = true;\n                        numAlive += 1;\n                    }\n                }\n            }\n\n            return { numAlive, numOnceAlive: onceAlive.filter(x => x).length };\n        },\n        [gridWidth, gridHeight, ca, onceAlive]\n    )\n\n    const step = useCallback(\n        () => {\n            ca.step();\n            const stats = updateCaStats();\n            drawCells();\n\n            caControlDispatch({ type: 'executedStep', stats });\n        },\n        [ca, drawCells, caControlDispatch, updateCaStats]\n    )\n\n    const clearOnceAlive = useCallback(\n        () => {\n            onceAlive.forEach((_, i, a) => { a[i] = 0; });\n        },\n        [onceAlive]\n    );\n\n    const reset = useCallback(\n        () => {\n            caControlDispatch({ type: 'initialize' });\n        },\n        [caControlDispatch]\n    );\n\n    useEffect(() => {\n        async function init() {\n            const wasm = await wasmInit();\n            const ca = new wasm.GameOfLife(caSettings.gridSize, caSettings.gridSize, caSettings.borderWraps);\n            seedCa(ca);\n            clearOnceAlive();\n            caControlDispatch({ type: 'initialized', ca, seed });\n        }\n\n        if (!caControl?.ca || caControl.seed !== seed) {\n            init();\n        } else {\n            drawGrid();\n            drawCells();\n        }\n    }, [\n        seed, caControl?.ca, caControl?.seed, caSettings, caControlDispatch,\n        seedCa, clearOnceAlive, drawGrid, drawCells\n    ]);\n\n    useEffect(() => {\n        if (caControl?.autoRun) {\n            const timer = setTimeout(() => {\n                step();\n            }, 10);\n\n            return function cleanup() {\n                clearTimeout(timer);\n            }\n        }\n    });\n\n    return (<Container>\n        <Row className=\"ButtonRow\">\n            <Col>\n                <Button onClick={() => caControlDispatch({ type: 'toggleAutoRun' })} disabled={!caControl || caControl.autoRun}>Play</Button>{' '}\n                <Button onClick={() => caControlDispatch({ type: 'toggleAutoRun' })} disabled={!caControl || !caControl.autoRun}>Pause</Button>{' '}\n                <Button onClick={() => step()} disabled={!caControl || caControl.autoRun}>Step</Button>{' '}\n                <Button onClick={() => reset()} disabled={!caControl || caControl.autoRun}>Reset</Button>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <canvas ref={canvasRef}\n                    width={(cellSize + 1) * caSettings.gridSize + 1}\n                    height={(cellSize + 1) * caSettings.gridSize + 1}></canvas>\n            </Col>\n        </Row>\n    </Container>);\n}","export const MAX_GRID_SIZE = 128;\nexport const SEED_SIZE = 8;\n\nexport const NUM_GENOTYPE_GROUPS = 8;","import React, { useContext, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport worker from 'workerize-loader!../workers/EaWorker';\n\nexport const EaControlContext = React.createContext();\n\nexport const initialEaControlState = undefined;\n\nexport function eaControlReducer(state, action) {\n    switch (action.type) {\n        case 'initialize': return {\n            settings: action.settings\n        };\n        case 'initialized': return {\n            worker: action.worker,\n            isRunning: false,\n            executeStep: false,\n            autoRun: true,\n            runTime: 0,\n        };\n        case 'toggleAutoRun': return {\n            ...state,\n            autoRun: !state.autoRun,\n        }\n        case 'executeStep': return {\n            ...state,\n            executeStep: true,\n        };\n        case 'startStep': return {\n            ...state,\n            isRunning: true,\n            executeStep: false,\n        };\n        case 'executedStep': return {\n            ...state,\n            isRunning: false,\n            runTime: state.runTime + action.executionTime,\n            eaState: action.eaState\n        };\n        case 'reset': return {\n            ...state,\n            destroy: true,\n        };\n        case 'executedReset': return undefined;\n        default:\n            console.error('Unexpected action:', action.type);\n    }\n}\n\nexport function EaControl() {\n    const { eaControl, eaControlDispatch } = useContext(EaControlContext);\n\n    // Init EA in worker thread\n    useEffect(() => {\n        async function init(settings) {\n            console.info(\"Setting worker\");\n            const eaWorker = new worker();\n            await eaWorker.init(settings);\n            eaControlDispatch({ type: 'initialized', worker: eaWorker });\n        }\n\n        if (eaControl.settings) {\n            init(eaControl.settings);\n        }\n    }, [eaControl.settings, eaControlDispatch]);\n\n    useEffect(() => {\n        if (eaControl.worker && !eaControl.isRunning) {\n            if (eaControl.executeStep || eaControl.autoRun) {\n                eaControlDispatch({ type: 'startStep' });\n                const startStep = new Date().getTime();\n\n                eaControl.worker.step().then(eaState => {\n                    const endStep = new Date().getTime();\n                    eaControlDispatch({\n                        type: 'executedStep',\n                        executionTime: (endStep - startStep),\n                        eaState \n                    });\n                });\n            }\n        }\n    }, [eaControl, eaControlDispatch]);\n\n    useEffect(() => {\n        if (eaControl.destroy) {\n            console.info(\"Terminating worker\");\n            eaControl.worker.terminate();\n            eaControlDispatch({ type: 'executedReset' });\n        }\n    }, [eaControl.destroy, eaControl.worker, eaControlDispatch]);\n\n    const isRunning = eaControl.isRunning || eaControl.autoRun;\n    return (\n        <div className=\"ButtonRow\">\n            <Button onClick={() => eaControlDispatch({ type: 'toggleAutoRun' })} disabled={eaControl?.autoRun}>Run</Button>{' '}\n            <Button onClick={() => eaControlDispatch({ type: 'toggleAutoRun' })} disabled={!eaControl?.autoRun}>Pause</Button>{' '}\n            <Button onClick={() => eaControlDispatch({ type: 'executeStep' })} disabled={isRunning}>Step</Button>{' '}\n            <Button onClick={() => eaControlDispatch({ type: 'reset' })} disabled={isRunning}>Reset</Button>\n        </div>\n    );\n}","import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport React, { useContext } from 'react';\n\nimport { EaControlContext } from './EaControl';\nimport { CaSettingsContext } from './CaControl';\nimport { bound } from '../shared/utils';\n\nexport const EaSettingsContext = React.createContext();\n\nexport const initialEaSettings = {\n    populationSize: 100,\n    recombinationRate: 0.4,\n    mutationRate: 0.9,\n    tournamentSize: 2,\n    elitism: true,\n    fitnessNumToggledCells: 1.0,\n    fitnessNumToggledSteps: 0.0,\n    fitnessMaxAliveCells: 0.0,\n    fitnessMaxAliveSteps: 0.0,\n    fitnessNumStartCells: 0.0,\n};\n\nexport function eaSettingsReducer(state, action) {\n    console.log(\"dispatched\", state, action);\n    switch (action.type) {\n        case 'populationSize': return {\n            ...state, populationSize: bound(action.value, 10, 1000)\n        };\n        case 'recombinationRate': return {\n            ...state, recombinationRate: bound(action.value, 0, 1)\n        };\n        case 'mutationRate': return {\n            ...state, mutationRate: bound(action.value, 0, 1)\n        };\n        case 'tournamentSize': return {\n            ...state, tournamentSize: bound(action.value, 1, 5)\n        };\n        case 'elitism': return {\n            ...state, elitism: action.value\n        };\n        case 'fitnessNumToggledCells': return {\n            ...state, fitnessNumToggledCells: bound(action.value, -100, 100)\n        };\n        case 'fitnessNumToggledSteps': return {\n            ...state, fitnessNumToggledSteps: bound(action.value, -100, 100)\n        };\n        case 'fitnessMaxAliveCells': return {\n            ...state, fitnessMaxAliveCells: bound(action.value, -100, 100)\n        };\n        case 'fitnessMaxAliveSteps': return {\n            ...state, fitnessMaxAliveSteps: bound(action.value, -100, 100)\n        };\n        case 'fitnessNumStartCells': return {\n            ...state, fitnessNumStartCells: bound(action.value, -100, 100)\n        };\n        default:\n            console.error('Unexpected action:', action.type);\n    }\n}\n\nexport function EaSettings() {\n    const { caSettings, caSettingsDispatch } = useContext(CaSettingsContext);\n    const { eaSettings, eaSettingsDispatch } = useContext(EaSettingsContext);\n    const { eaControlDispatch } = useContext(EaControlContext);\n\n    function NumericFormField(\n        // Required variables\n        id, label, value, actionType,\n        // Optional variables\n        optionalProps = {}\n    ) {\n        const {\n            disabled = false,\n            indent = false,\n            dispatch = eaSettingsDispatch,\n            stepSize = 1\n        } = optionalProps;\n\n        const activeStepSize = (stepSize * 20 <= Math.abs(value)) ? stepSize * 10 : stepSize;\n\n        return (\n            <Form.Group as={Row} controlId={id} key={id}>\n                { indent && <Col xs={1} /> }\n                <Form.Label column xs={indent ? 7 : 8}>{label}</Form.Label>\n                <Col xs={4}>\n                    <Form.Control type=\"number\" step={activeStepSize} value={value} disabled={disabled}\n                        onChange={e => dispatch({ type: actionType, value: e.target.value })} />\n                </Col>\n            </Form.Group>\n        );\n    };\n    function CheckBoxFormField(\n        // Required variables\n        id, label, value, actionType,\n        // Optional variables\n        optionalProps = {}\n    ) {\n        const {\n            dispatch = eaSettingsDispatch\n        } = optionalProps;\n\n        return (\n            <Form.Group as={Row} controlId={id}>\n                <Form.Label column xs={8}>{label}</Form.Label>\n                <Col xs={4}>\n                    <Form.Check type=\"checkbox\" \n                        checked={value}\n                        onChange={e => dispatch({ type: actionType, value: e.target.checked })} />\n                </Col>\n            </Form.Group>\n        );\n    };\n\n    const maxAliveFitnessEnabled = Math.abs(eaSettings.fitnessMaxAliveCells) >= 0.01;\n    const numToggledFitnessEnabled = Math.abs(eaSettings.fitnessNumToggledCells) >= 0.01;\n    \n    return <Form as={Container}>\n        <Row>\n            <Col><h1>Settings</h1></Col>\n        </Row>\n        <Row className=\"SettingsRow pt-2 mt-2 mb-2\">\n            <Col sm={12} md={3}><h5>CA</h5></Col>\n            <Col sm={12} md={9}>\n                { NumericFormField(\n                    'formGridSize',\n                    'Grid size',\n                    caSettings.gridSize,\n                    'gridSize',\n                    {\n                        dispatch: caSettingsDispatch,\n                        stepSize: 16,\n                    }\n                )}\n                { CheckBoxFormField(\n                    'formBorderWraps',\n                    'Enable border wrap',\n                    caSettings.borderWraps,\n                    'borderWraps',\n                    {\n                        dispatch: caSettingsDispatch\n                    }\n                )}\n            </Col>\n        </Row>\n        <Row className=\"SettingsRow pt-2 mt-2 mb-2\">\n            <Col sm={12} md={3}><h5>Fitness</h5></Col>\n            <Col sm={12} md={9}>\n                { NumericFormField(\n                    'formNumToggledCells',\n                    'Number of toggled cells',\n                    eaSettings.fitnessNumToggledCells,\n                    'fitnessNumToggledCells'\n                )}\n                { NumericFormField(\n                    'formNumToggledSteps',\n                    'Steps to reach',\n                    eaSettings.fitnessNumToggledSteps,\n                    'fitnessNumToggledSteps',\n                    {\n                        disabled: !numToggledFitnessEnabled,\n                        indent: true\n                    }\n                )}\n                { NumericFormField(\n                    'formMaxAliveCells',\n                    'Maximum alive cells',\n                    eaSettings.fitnessMaxAliveCells,\n                    'fitnessMaxAliveCells'\n                )}\n                { NumericFormField(\n                    'formMaxAliveSteps',\n                    'Step to reach',\n                    maxAliveFitnessEnabled ? eaSettings.fitnessMaxAliveSteps : 0,\n                    'fitnessMaxAliveSteps',\n                    {\n                        disabled: !maxAliveFitnessEnabled,\n                        indent: true\n                    }\n                )}\n                { NumericFormField(\n                    'formNumStartCells',\n                    'Number of cells at start',\n                    eaSettings.fitnessNumStartCells,\n                    'fitnessNumStartCells'\n                )}\n            </Col>\n        </Row>\n        <Row className=\"SettingsRow pt-2 mt-2 mb-2\">\n            <Col sm={12} md={3}><h5>Solver</h5></Col>\n            <Col sm={12} md={9}>\n                { NumericFormField(\n                    'formPopulationSize',\n                    'Population size',\n                    eaSettings.populationSize,\n                    'populationSize',\n                    {\n                        stepSize: 10\n                    }\n                )}\n                { NumericFormField(\n                    'formRecombinationRate',\n                    'Recombination rate',\n                    eaSettings.recombinationRate,\n                    'recombinationRate',\n                    {\n                        stepSize: 0.1\n                    }\n                )}\n                { NumericFormField(\n                    'formMutationRate',\n                    'Mutation rate',\n                    eaSettings.mutationRate,\n                    'mutationRate',\n                    {\n                        stepSize: 0.1\n                    }\n                )}\n                { NumericFormField(\n                    'formTournamentSize',\n                    'Tournament size',\n                    eaSettings.tournamentSize,\n                    'tournamentSize'\n                )}\n                { CheckBoxFormField(\n                    'formElitism',\n                    'Use elitism',\n                    eaSettings.elitism,\n                    'elitism'\n                )}\n            </Col>\n        </Row>\n        <Row>\n            <Col><center>\n            <Button variant=\"primary\" type=\"submit\"\n                onClick={() => eaControlDispatch({ type: 'initialize', settings: { ...eaSettings, ...caSettings }})} >\n                Start\n            </Button>\n            </center></Col>\n        </Row>\n    </Form>\n}","import { useContext, useEffect, useState } from 'react';\n\nimport { CaControlContext } from '../components/CaControl';\n\nconst Highcharts = require('highcharts');\nrequire('highcharts/modules/exporting')(Highcharts);\n\nexport function CaGraph() {\n    const [numStepsPlotted, setNumStepsPlotted] = useState(0);\n    const [maxNumAlive, setMaxNumAlive] = useState(0);\n    const [chart, setChart] = useState();\n\n    const { caControl } = useContext(CaControlContext);\n    const caState = caControl?.caStats;\n\n    const initChart = function() {\n        setChart(\n            Highcharts.chart('ea-graph', {\n                title: {\n                    text: \"CA Stats\",\n                },\n                yAxis: [{\n                    floor: 0,\n                    title: {\n                        text: 'Num. alive cells'\n                    }\n                }, {\n                    floor: 0,\n                    title: {\n                        text: 'Num. once alive cells'\n                    },\n                    opposite: true,\n                }],\n                series: [\n                    {\n                        name: 'Num. alive',\n                        type: 'line',\n                        marker: { enabled: false },\n                        data: [],\n                    },\n                    {\n                        name: 'Num. once alive',\n                        type: 'line',\n                        marker: { enabled: false },\n                        yAxis: 1,\n                        data: [],\n                    },\n                ]\n            })\n        );\n    };\n\n    useEffect(() => {\n        if (!chart) {\n            return\n        }\n        if (!caState) {\n            if (numStepsPlotted > 0) {\n                chart.destroy();\n                initChart();\n\n                setNumStepsPlotted(0);\n                setMaxNumAlive(0);\n            }\n        } else if (caControl.numSteps !== numStepsPlotted ) {\n            // Track and plot the maximum value over the window that is summarized by one data\n            // point in the plot. This way, the plot always shows the maximum that was reached.\n            const newMaxNumAlive = Math.max(maxNumAlive, caState.numAlive);\n            if (caControl.numSteps % 10 === 0) {\n                chart.series[0].addPoint([caControl.numSteps, newMaxNumAlive], true, false);\n                chart.series[1].addPoint([caControl.numSteps, caState.numOnceAlive], true, false);\n\n                setMaxNumAlive(0);\n            } else {\n                setMaxNumAlive(newMaxNumAlive);\n            }\n            // Track that data point is handled (even if it is not plotted yet)\n            setNumStepsPlotted(caControl.numSteps);\n        }\n    }, [caState, caControl?.numSteps, numStepsPlotted, maxNumAlive, chart])\n\n    useEffect(() => {\n        initChart();\n    }, []);\n\n    return (\n        <div id=\"ea-graph\" style={{height: \"400px\", width: \"100%\" }} ></div>\n    )\n}","import { useReducer } from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { CaControl, CaControlContext, caControlReducer, initialCaControlState } from '../components/CaControl';\nimport { CaGraph } from '../components/CaGraph';\n\nexport function Ca({ seed }) {\n    const history = useHistory();\n    const [caControl, caControlDispatch] = useReducer(caControlReducer, initialCaControlState);\n\n    if (!seed) {\n        console.info(\"No seed. Redirecting to main page\");\n        history.push(\"/\");\n    }\n\n    return (seed && <Container>\n        <Row>\n            <CaControlContext.Provider value={{ caControl, caControlDispatch }}>\n                <Col>\n                    <CaControl seed={seed} />\n                </Col>\n                <Col>\n                    <CaGraph />\n                </Col>\n            </CaControlContext.Provider>\n        </Row>\n    </Container>);\n}","import { useEffect, useRef, useState } from 'react';\nimport { NUM_GENOTYPE_GROUPS, SEED_SIZE } from '../shared/Constants';\n\n// Separation between the big cells\nconst S1 = 3;\n// Internal separation within the big cells\nconst S2 = 1;\n// Separation between the top rows and the seed patch\nconst S3 = 8;\n\nfunction fillStyle(intensity) {\n    const boundedIntensity = Math.min(1, Math.max(0, Number(intensity)));\n\n    return `rgb(${(1 - boundedIntensity) * 255}, ${boundedIntensity * 255}, 0)`;\n}\n\nfunction clearPlot(ctx, plotSettings) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = \"#A0A0A0\";\n    ctx.fillRect(plotSettings.x0, plotSettings.y0, plotSettings.width, plotSettings.height);\n}\n\nfunction drawGenotype(ctx, plotSettings, genotype) {\n    let index = 0;\n    let x = 0;\n    let y = 0;\n    const numGroupBits = 2 * NUM_GENOTYPE_GROUPS;\n    const w = plotSettings.cellSize * 2 + S2;\n\n    while (index < numGroupBits) {\n        ctx.fillStyle = fillStyle(genotype[index]);\n        ctx.fillRect(x + plotSettings.x0 + S1, y + plotSettings.y0 + S1, w, w);\n\n        index += 1;\n        if (index % NUM_GENOTYPE_GROUPS === 0) {\n            x = 0;\n            y += w + S1;\n        } else {\n            x += w + S1;\n        }\n    }\n\n    y += S3;\n    const plotCell = function(index, x, y) {\n        ctx.fillStyle = fillStyle(genotype[index]);\n        ctx.fillRect(x + plotSettings.x0 + S1, y + plotSettings.y0 + S1, plotSettings.cellSize, plotSettings.cellSize);\n    }\n\n    let col = 0;\n    while (index < genotype.length) {\n        plotCell(index    , x, y);\n        plotCell(index + 1, x + plotSettings.cellSize + S2, y);\n        plotCell(index + 2, x, y + plotSettings.cellSize + S2);\n        plotCell(index + 3, x + plotSettings.cellSize + S2, y + plotSettings.cellSize + S2);\n\n        col += 1;\n        index += 4;\n        if (col % SEED_SIZE === 0) {\n            x = 0;\n            y += w + S1;\n        } else {\n            x += w + S1;\n        }\n    }\n}\n\nexport function GenotypePlot({ genotype }) {\n    const [plotSettings, setPlotSettings] = useState();\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        if (canvas.width === plotSettings?.canvasWidth) {\n            return;\n        }\n\n        const horizontalCellSpacing = (SEED_SIZE + 1) * S1;\n        const horizontalCellSpace = canvas.width - horizontalCellSpacing;\n        const verticalCellSpacing = (SEED_SIZE + 3) * S1 + S3;\n        const verticalCellSpace = canvas.height - verticalCellSpacing;\n        const bigCellMaxWidth = Math.floor(horizontalCellSpace / SEED_SIZE);\n        const bigCellMaxHeight = Math.floor(verticalCellSpace / (SEED_SIZE + 2));\n        const bigCellMaxSize = Math.min(bigCellMaxHeight, bigCellMaxWidth); \n        const cellSize = Math.floor((bigCellMaxSize - S2) / 2);\n        const bigCellSize = cellSize * 2 + S2;\n        const width = horizontalCellSpacing + SEED_SIZE * bigCellSize;\n        const height = verticalCellSpacing + (SEED_SIZE + 2) * bigCellSize;\n        const settings = {\n            canvasWidth: canvas.width,\n            cellSize,\n            x0: Math.floor((canvas.width - width) / 2),\n            y0: Math.floor((canvas.height - height) / 2),\n            width,\n            height,\n        }\n\n        console.info({w: canvas.width, h: canvas.height, horizontalCellSpace, verticalCellSpace, bigCellSize});\n        console.info(\"Plot settings:\", settings);\n\n        setPlotSettings(settings);\n    }, [plotSettings]);\n\n    useEffect(() => {\n        if (!plotSettings) {\n            return;\n        }\n\n        const ctx = canvasRef.current.getContext('2d');\n\n        if (genotype) {\n            drawGenotype(ctx, plotSettings, genotype);\n        } else {\n            clearPlot(ctx, plotSettings);\n        }\n    }, [plotSettings, genotype]);\n\n    return <div className=\"plot-container\">\n        <canvas className=\"plot\" ref={canvasRef} height={200}></canvas>\n    </div>;\n}","import { useEffect, useRef, useState } from 'react';\nimport { SEED_SIZE } from '../shared/Constants';\n\n// Separation between the cells\nconst S1 = 3;\n\nfunction fillStyle(intensity) {\n    const boundedIntensity = (1 - Math.min(1, Math.max(0, Number(intensity)))) * 255;\n\n    return `rgb(${boundedIntensity}, ${boundedIntensity}, ${boundedIntensity})`;\n}\n\nfunction clearPlot(ctx, plotSettings) {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n\nfunction drawPhenotype(ctx, plotSettings, phenotype) {\n    let index = 0;\n    let x = 0;\n    let y = 0;\n\n    while (index < phenotype.length) {\n        ctx.fillStyle = fillStyle(phenotype[index]);\n        ctx.fillRect(x + plotSettings.x0, y + plotSettings.y0, plotSettings.cellSize, plotSettings.cellSize);\n\n        index += 1;\n        if (index % SEED_SIZE === 0) {\n            x = 0;\n            y += plotSettings.cellSize + S1;\n        } else {\n            x += plotSettings.cellSize + S1;\n        }\n    }\n}\n\nexport function PhenotypePlot({ phenotype }) {\n    const [plotSettings, setPlotSettings] = useState();\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        if (plotSettings) {\n            return;\n        }\n\n        const canvas = canvasRef.current;\n        const cellSpacing = (SEED_SIZE - 1) * S1;\n        const horizontalCellSpace = canvas.width - cellSpacing;\n        const verticalCellSpace = canvas.height - cellSpacing;\n        const cellMaxWidth = Math.floor(horizontalCellSpace / SEED_SIZE);\n        const cellMaxHeight = Math.floor(verticalCellSpace / SEED_SIZE);\n        const cellSize = Math.min(cellMaxHeight, cellMaxWidth); \n        const width = cellSpacing + SEED_SIZE * cellSize;\n        const height = cellSpacing + SEED_SIZE * cellSize;\n        const settings = {\n            cellSize,\n            x0: Math.floor((canvas.width - width) / 2),\n            y0: Math.floor((canvas.height - height) / 2),\n            width,\n            height,\n        }\n\n        console.info(\"Plot settings:\", settings);\n\n        setPlotSettings(settings);\n    }, [plotSettings]);\n\n    useEffect(() => {\n        if (!plotSettings) {\n            return;\n        }\n\n        const ctx = canvasRef.current.getContext('2d');\n\n        if (phenotype) {\n            drawPhenotype(ctx, plotSettings, phenotype);\n        } else {\n            clearPlot(ctx, plotSettings);\n        }\n    }, [plotSettings, phenotype]);\n\n    return <div className=\"plot-container\">\n        <canvas className=\"plot\" ref={canvasRef} height={200}></canvas>\n    </div>;\n}","import { useContext, useEffect, useState } from 'react';\n\nimport { EaControlContext } from '../components/EaControl';\n\nconst Highcharts = require('highcharts');\nrequire('highcharts/modules/exporting')(Highcharts);\n\nconst historyLen = 250;\n\nexport function EaGraph() {\n    const [lastPlotGeneration, setLastPlotGeneration] = useState(0);\n    const [numPlotPoints, setNumPlotPoints] = useState(0);\n    const [chart, setChart] = useState();\n\n    const { eaControl } = useContext(EaControlContext);\n    const eaState = eaControl?.eaState;\n\n    const initChart = function() {\n        setChart(\n            Highcharts.chart('ea-graph', {\n                title: {\n                    text: \"Optimization Progress\",\n                },\n                yAxis: [{\n                    title: {\n                        text: 'Fitness'\n                    }\n                }, {\n                    title: {\n                        text: 'Evaluations'\n                    },\n                    opposite: true\n                }],\n                series: [\n                    {\n                        name: 'Max. fitness',\n                        type: 'line',\n                        marker: { enabled: false },\n                        data: [],\n                    },\n                    {\n                        name: 'Num. evaluations',\n                        type: 'line',\n                        marker: { enabled: false },\n                        yAxis: 1,\n                        data: [],\n                    },\n                ]\n            })\n        );\n    };\n\n    useEffect(() => {\n        if (!chart) {\n            return\n        }\n        if (!eaState) {\n            // EA was reset. Reset graph, if not yet already done.\n            if (lastPlotGeneration > 0) {\n                chart.destroy();\n                initChart();\n\n                setLastPlotGeneration(0);\n                setNumPlotPoints(0);\n            }\n        } else {\n            // Add EA state to graph, if not yet already done.\n            if (eaState?.generations !== lastPlotGeneration) {\n                const shift = numPlotPoints === historyLen;\n                chart.series[0].addPoint([eaState.generations, eaState.maxFitness], true, shift);\n                chart.series[1].addPoint([eaState.generations, eaState.evaluationsDelta], true, shift);\n\n                setLastPlotGeneration(eaState.generations);\n                if (!shift) {\n                    setNumPlotPoints(numPlotPoints + 1);\n                }\n            }\n        }\n    }, [eaState, chart, numPlotPoints, lastPlotGeneration]);\n\n    useEffect(() => {\n        initChart();\n    }, []);\n\n    return (\n        <div id=\"ea-graph\" style={{height: \"400px\", width: \"100%\" }} ></div>\n    )\n}","import { useContext } from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport { EaControlContext } from './EaControl';\n\nexport function EaStatistics() {\n    const { eaControl } = useContext(EaControlContext);\n    const eaState = eaControl?.eaState;\n\n    if (!eaState) {\n        return null;\n    }\n\n    const runTimeInSeconds = eaControl.runTime / 1000;\n\n    return (<Container>\n        <Row>\n            <Col className=\"Label\" xs={8}>Num. generations</Col>\n            <Col className=\"NumValue\" xs={4}>{eaState.generations}</Col>\n        </Row>\n        <Row>\n            <Col className=\"Label\" xs={8}>Num. evaluations</Col>\n            <Col className=\"NumValue\" xs={4}>{eaState.evaluations}</Col>\n        </Row>\n        <Row>\n            <Col className=\"Label\" xs={8}>Num. CA steps</Col>\n            <Col className=\"NumValue\" xs={4}>{eaState.caSteps}</Col>\n        </Row>\n        <Row>\n            <Col className=\"Label\" xs={8}>Max. fitness</Col>\n            <Col className=\"NumValue\" xs={4}>{Math.round(eaState.maxFitness)}</Col>\n        </Row>\n        <Row>\n            <Col className=\"Label\" xs={8}>Avg. fitness</Col>\n            <Col className=\"NumValue\" xs={4}>{Math.round(eaState.avgFitness)}</Col>\n        </Row>\n        <Row>\n            <Col className=\"Label\" xs={8}>Run time [s]</Col>\n            <Col className=\"NumValue\" xs={4}>{Math.round(runTimeInSeconds)}</Col>\n        </Row>\n        <Row>\n            <Col className=\"Label\" xs={8}>EA speed [evals/s]</Col>\n            <Col className=\"NumValue\" xs={4}>{runTimeInSeconds > 0 ? Math.round(eaState.evaluations / runTimeInSeconds) : \"-\"}</Col>\n        </Row>\n        <Row>\n            <Col className=\"Label\" xs={8}>CA speed [steps/s]</Col>\n            <Col className=\"NumValue\" xs={4}>{runTimeInSeconds > 0 ? Math.round(eaState.caSteps / runTimeInSeconds) : \"-\"}</Col>\n        </Row>\n    </Container>);\n}","import React, { useContext } from 'react';\n\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport { GenotypePlot } from '../components/GenotypePlot';\nimport { PhenotypePlot } from '../components/PhenotypePlot';\nimport { EaGraph } from '../components/EaGraph';\nimport { EaStatistics } from '../components/EaStatistics';\nimport { EaControl, EaControlContext } from '../components/EaControl';\n\nexport function EaRunner() {\n    const { eaControl } = useContext(EaControlContext);\n\n    return (<Container>\n        <Row>\n            <Col lg={4} xs={6}>\n                <Container>\n                    <Row>\n                        <Col><EaControl /></Col>\n                    </Row>\n                    <Row>\n                        <EaStatistics />\n                    </Row>\n                </Container>\n            </Col>\n            <Col lg={8} xs={12}>\n                <EaGraph />\n            </Col>\n        </Row>\n        <Row>\n            <Col lg={3}>\n                <h3>Gene distribution</h3>\n                <GenotypePlot genotype={eaControl?.eaState?.geneDistribution} />\n            </Col>\n            <Col lg={3}>\n                <h3>Best genotype</h3>\n                <GenotypePlot genotype={eaControl?.eaState?.bestGenotype} />\n            </Col>\n            <Col lg={3}>\n                <h3>Cell distribution</h3>\n                <PhenotypePlot phenotype={eaControl?.eaState?.cellDistribution} />\n            </Col>\n            <Col lg={3}>\n                <h3>Best phenotype</h3>\n                <PhenotypePlot phenotype={eaControl?.eaState?.bestPhenotype} />\n            </Col>\n        </Row>\n    </Container>);\n}","import Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport { EaSettings } from '../components/EaSettings';\n\nexport function EaSetup() {\n    return (<Container>\n        <Row>\n            <Col xs={0} md={1} lg={2} xl={3}/>\n            <Col xs={12} md={10} lg={8} xl={6}><EaSettings /></Col>\n            <Col xs={0} md={1} lg={2} xl={3}/>\n        </Row>\n    </Container>)\n}","import { useContext } from 'react';\nimport { EaControlContext } from '../components/EaControl';\nimport { EaRunner } from './EaRunner';\nimport { EaSetup } from './EaSetup';\n\nexport function Ea() {\n    const { eaControl } = useContext(EaControlContext);\n\n    return (<>{eaControl ? <EaRunner /> : <EaSetup />}</>);\n}","\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nexport function Help() {\n    return (<Container>\n        <Row className=\"mt-3\">\n            <p>\n                This application lets you use a Genetic Algorithm to solve an optimization problems in Conway's Game of Life.\n            </p>\n        </Row>\n        <Row as=\"h2\">\n            Conway's Game of Life\n        </Row>\n        <Row>\n            <p>\n                <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\">Conway's Game of Life</a> is a Cellular Automaton (CA) devised by John Conway.\n                It consists of a simple set of rules that specify how a set of cells in a two-dimensional grid behave.\n                Each cell can only have two states: dead or alive.\n                The state of a cell in the next generation of the CA depends on its current state, as well as those of its eight neighbours.\n            </p>\n            <p>\n                The rules are as follows:\n                <ul>\n                    <li>An alive cell with two or three alive neighbours remains alive</li>\n                    <li>A dead cell with exactly three alive neighbours becomes alive</li>\n                    <li>The state of all other cells remains unchanged</li>\n                </ul>\n            </p>\n        </Row>\n        <Row as=\"h2\">\n            The Optimization Problem\n        </Row>\n        <Row>\n            <p>\n                You can solve variants of the following problem:\n                    Starting with an 8x8 group of cells at the center of the CA grid, what is the configuration\n                    that covers most of the grid?\n            </p>\n            <p>\n                More specifically, the following aspects can be rewarded:\n                <ul>\n                    <li><em>Number of toggled cells</em>: The number of cells that were alive at least once</li>\n                    <li><em>Maximum alive cells</em>: The maximum number of cells that were alive at a given moment</li>\n                    <li><em>The number of cells at start</em>: The number of alive cells at the start</li>\n                </ul>\n                By specifying weights you control which aspects are considered.\n                Aspects are ignored when the weight is zero.\n                Via the sign of the weights you can choose if the objective is to maximise or minimize the aspect.\n                Typically, the first two aspects are maximised and the last one minimized, but do what you like.\n            </p>\n        </Row>\n        <Row as=\"h2\">\n           Genetic Algorithm\n        </Row>\n        <Row>\n            <p>\n                A <em>Genetic Algorithm</em> (GA) is a nature-inspired optimization technique that mimics natural selection.\n            </p>\n            <p>\n                A GA uses a <em>population</em> of <em>individuals</em>.\n                Each individual has a <em>genotype</em>, in this case a string of bits.\n                Each genotype encodes a <em>phenotype</em>, a possible solution to the problem.\n                For this problem a neutral encoding is used, which means that many genotypes translate to the the same phenotype.\n                This type of encoding can help to prevent premature convergence of the optimization algorithm.\n                It can reduce the probability that the algorithm gets stuck in a poor quality sub-optimal solution.\n            </p>\n            <p>\n                For each individual the GA determines a <em>fitness</em>.\n                For this problem, the GA does so as follows:\n                <ol>\n                    <li>It creates a CA with a starting configuration as specified by the individual's phenotype</li>\n                    <li>It executes the CA until it seems to have stabilized (according to some heuristic rules)</li>\n                    <li>It calculates a fitness by scoring the aspects according to the configured weights</li>\n                </ol>\n            </p>\n            <p>\n                The fitness is used to select individuals on which to base the next generation of the population.\n                Individuals with a higher fitness are more likely to be selected.\n                Individuals can reproduce in two different ways:\n                <ul>\n                    <li>\n                        An individual can reproduce sexually.\n                        In this case, two individuals are selected, and their genotypes are <em>recombined</em> to form a new individual.\n                    </li>\n                    <li>\n                        Alternatively, an individual reproduces a-sexually.\n                        It then reproduces by cloning its genotype.\n                    </li>\n                </ul>\n                In both cases, the genotype of the new individual is typically <em>mutated</em> to introduce variation.\n            </p>\n            <p>\n                Selection optionally uses <em>elitism</em>.\n                When enabled, the best individual is always selected and copied without mutation to the new generation.\n                This ensures that the best solution is never forgotten.\n                A drawback is that it can lead to premature convergence.\n                Elitism reduces the genetic diversity, which may limit the quality of the solution that is found.\n            </p>\n        </Row>\n    </Container>);\n}","import './App.css';\nimport { useReducer } from 'react';\nimport { HashRouter, Link, Route, Switch } from 'react-router-dom';\n\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { CaSettingsContext, caSettingsReducer, initialCaSettings } from './components/CaControl';\nimport { EaControlContext, eaControlReducer, initialEaControlState } from './components/EaControl';\nimport { EaSettingsContext, initialEaSettings, eaSettingsReducer } from './components/EaSettings';\nimport { Ca } from './pages/Ca'\nimport { Ea } from './pages/Ea'\nimport { Help } from './pages/Help'\n\nfunction App() {\n    const [caSettings, caSettingsDispatch] = useReducer(caSettingsReducer, initialCaSettings);\n    const [eaControl, eaControlDispatch] = useReducer(eaControlReducer, initialEaControlState);\n    const [eaSettings, eaSettingsDispatch] = useReducer(eaSettingsReducer, initialEaSettings);\n\n    return (\n        <div className=\"App\">\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <Container>\n                    <Navbar.Brand href=\"#/\" >Evolving Live</Navbar.Brand>\n                    <Nav defaultActiveKey=\"#/\">\n                        <Nav.Link href=\"#/\" >GA</Nav.Link>\n                        <Nav.Link href=\"#/ca\" >CA</Nav.Link>\n                        <Nav.Link href=\"#/help\" >Help</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n            <EaControlContext.Provider value={{ eaControl, eaControlDispatch }}>\n                <EaSettingsContext.Provider value={{ eaSettings, eaSettingsDispatch }}>\n                    <CaSettingsContext.Provider value={{ caSettings, caSettingsDispatch }}>\n                        <HashRouter basename=\"/\">\n                            <Switch>\n                                <Route exact path=\"/\">\n                                    <Ea/>\n                                </Route>\n                                <Route exact path=\"/ca\">\n                                    <Ca seed={eaControl?.eaState?.bestPhenotype} />\n                                </Route>\n                                <Route exact path=\"/help\">\n                                    <Help />\n                                </Route>\n                                <Route path=\"*\">\n                                    <p>Page not found</p>\n                                    <Link to=\"/\">Go back</Link>\n                                </Route>\n                            </Switch>\n                        </HashRouter>\n                    </CaSettingsContext.Provider>\n                </EaSettingsContext.Provider>\n            </EaControlContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}